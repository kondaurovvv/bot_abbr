from datetime import datetime
from datetime import timedelta
import csv_operations as co


"""
Module : log_operations
"""


ten_most_recently_added_transcripts: list = []
ten_most_popular_transcripts: dict = dict()
ten_most_recent_first_time_users: list = []
all_users: dict = dict()


def save_text_log(message) -> None:
    """
    –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:
        1) –î–∞—Ç—É –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        2) –í—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        3) –ß–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        4) –ü–µ—Ä–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        5) –í—Ç–æ—Ä–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        6) –¢–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    :param log_lst: –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    :type log_lst: `list`

    :return: –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV –≤ —Ñ–∞–π–ª log.csv.
    :rtype: None
    """

    date_time: datetime = datetime.now()
    current_date: str = date_time.strftime("%d-%m-%Y")
    current_time: str = date_time.strftime("%H:%M:%S")
    log_lst: list = [
        message.chat.id,
        message.from_user.first_name,
        message.from_user.last_name,
        message.text,
    ]
    def save_log(log_lst):
        with open("log/log.csv", "a", encoding="utf8") as file_log:
            user_text: str = (
                log_lst[3]
                .replace("\n", " ")
                .replace("'", "*")
                .replace('"', "**")
                .replace(";", "|")
            )  # –°–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–π
            csv_str: str = f'"{current_date}";"{current_time }";"{log_lst[0]}";"{log_lst[1]}";"{log_lst[2]}";"{user_text}"\n'
            file_log.write(csv_str)


def adding_transcripts(text):
    if len(ten_most_recently_added_transcripts) == 10:
        ten_most_recently_added_transcripts.pop(0)
    ten_most_recently_added_transcripts.append(text)


def count_popular_transcripts(text):
    if text in ten_most_popular_transcripts:
        ten_most_popular_transcripts[text] += 1
    else:
        ten_most_popular_transcripts[text] = 1


def assembly_of_new_users(message):
    if str(message.from_user.id) not in ten_most_recent_first_time_users:
        ten_most_recent_first_time_users.append(str(message.from_user.id))
    if len(ten_most_recent_first_time_users) > 10:
        ten_most_recent_first_time_users.pop(0)


def assembly_all_users(message):
    if message.from_user.id in all_users:
        all_users[message.from_user.id] += 1
    else:
        all_users[message.from_user.id] = 1


def collection_of_the_number_of_hits():
    date_lst = []
    for i in range(10):
        date = datetime.today() - timedelta(days=i)
        date = date.strftime("%d-%m-%Y")
        date_lst.append(date)
    co.read_csv('log/log.csv')



"""
–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –º–æ–∂–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–∞ CSV.
python3 log_operations.py
"""


if __name__ == "__main__":
    # pass
    # Test save_text_log ‚Ññ1
    log_lst: list = ["5676564257", "–í–ª–∞–¥–∏–º–∏—Ä", "–ö–æ–Ω–¥–∞—É—Ä–æ–≤", "–ö–ì–ë"]
    save_text_log(log_lst)

    # Test save_text_log ‚Ññ2
    log_lst: list = ["5676564257", "–í–ª–∞–¥–∏–º–∏—Ä", "–ö–æ–Ω–¥–∞—É—Ä–æ–≤", "–π—Ü—Éüò°"]
    save_text_log(log_lst)

    # Test save_text_log ‚Ññ3
    log_lst: list = ["5676564257", "–í–ª–∞–¥–∏–º–∏—Ä", "–ö–æ–Ω–¥–∞—É—Ä–æ–≤", "—á—Å–º—á–≤\n—ã–≤–∞—á—è—Å–º\n—è—á—Å–º—è—Å"]
    save_text_log(log_lst)

    # Test save_text_log ‚Ññ4
    log_lst: list = [
        "5676564257",
        "–í–ª–∞–¥–∏–º–∏—Ä",
        "–ö–æ–Ω–¥–∞—É—Ä–æ–≤",
        "—è—á—Å—è—á—Å \"zxcczxc\", qweqw 'vbfxvx',:dasd;qweq;",
    ]
    save_text_log(log_lst)

    # with open("log.csv", "r", encoding="utf8") as file_log:
    #     print(file_log.read())

    collection_of_the_number_of_hits()
